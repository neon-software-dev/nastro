name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true

      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            preset: desktop-distro-windows

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Cache vcpkg
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/external/vcpkg
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('external/prepare_dependencies.py', 'external/internal/prepare_vcpkg.py') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Prepare dependencies
      run: python prepare_dependencies.py
      working-directory: ${{ github.workspace }}/external/

    - name: CMake Configure
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        --preset ${{ matrix.preset }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/external/vcpkg/scripts/buildsystems/vcpkg.cmake
        -DBUILD_SHARED_LIBS=OFF
        -DBUILD_TESTING=OFF
        -S ${{ github.workspace }}/src

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --parallel
    
    #- name: Test NFITS
    #  run: ctest --output-on-failure
    #  working-directory: ${{ steps.strings.outputs.build-output-dir }}/nfits/
    
    #- name: Build
    #  run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --parallel --target package
      
    #- name: Upload artifacts
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: nastroui-${{ runner.os }}
    #    path: ${{ github.workspace }}/build/nastroui-*.zip

