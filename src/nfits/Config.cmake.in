include(CMakeFindDependencyMacro)

# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

######
# Exported configuration
######

# Whether NFITS was built as shared libs or not
set(NFITS_BUILT_SHARED @BUILD_SHARED_LIBS@)

# Export filepath directories of lib and bin dirs
set(NFITS_INSTALL_LIB_DIR "${_IMPORT_PREFIX}/@CMAKE_INSTALL_LIBDIR@")
set(NFITS_INSTALL_BIN_DIR "${_IMPORT_PREFIX}/@CMAKE_INSTALL_BINDIR@")

# Export that NFITS was found
set(NFITS_FOUND TRUE)

######
# Dependencies
######

# Dependencies the client needs when linking against a static build of NFITS. These are static transitive dependencies
# of NFITS. Shared builds of NFITS have these built directly into the binaries and thus the client doesn't need to find
# them.
if(NOT NFITS_BUILT_SHARED)
	# no-op
endif()

# Dependencies that are part of the public API that the client needs to take a dependency against, no matter whether
# NFITS was built as shared or static libraries.

# no-op

######
# Include/Export NFITS targets
######

include("${CMAKE_CURRENT_LIST_DIR}/NFITSTargets.cmake")

